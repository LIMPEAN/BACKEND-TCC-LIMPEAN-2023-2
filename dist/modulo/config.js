"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERRO_UPDATE_ADDRESS_CLIENT = exports.ERRO_INVALID_TOKEN = exports.ERRO_REQUIRED_TOKEN = exports.ERRO_REQUIRED_DATA_HOUSE_CLIENTE = exports.DELETE_USER = exports.ERRO_UPDATE_PHONE_USER = exports.ERRO_UPDATE_DATA_SIMPLE_DIARIST = exports.ERRO_UPDATE_USER = exports.ERRO_DELETE_USER = exports.ERRO_ADDRESS = exports.ERRO_NUMBER_PHONE = exports.ERRO_REQUIRE_CPF = exports.ERRO_REQUIRE_BIRTH_DATE = exports.ERRO_REGISTER_EMAIL = exports.UPDATE_USER = exports.CREATED_REGISTER = exports.ERRO_REGISTER_USER = exports.ERRO_REQUIRED_DATA_DIARISTA = exports.ERRO_REQUIRED_DATA_CLIENTE = exports.ERRO_NAME_PHOTO_PASSWORD = exports.ERRO_INTERNAL_SERVER = exports.ERRO_INVALID_TYPE_USER = exports.ERRO_INVALID_LOGIN_USER = exports.ERRO_INVALID_USER = exports.ERROR_INVALID_CONTENT_TYPE = exports.REQUIRE_SECRETE = void 0;
const REQUIRE_SECRETE = "3oFEe4PtHxJeXsa7hY8WBFtCt1AJ4GwgqF6WARF1NG0mUnc89W";
exports.REQUIRE_SECRETE = REQUIRE_SECRETE;
const ERROR_INVALID_CONTENT_TYPE = { status: 415, message: 'O tipo de mídia (Content-Type) da solicitação não é compatível com o servidor. Esperado: application/json' };
exports.ERROR_INVALID_CONTENT_TYPE = ERROR_INVALID_CONTENT_TYPE;
const ERRO_INVALID_USER = { status: 401, message: "Email ou Senha inválidos." };
exports.ERRO_INVALID_USER = ERRO_INVALID_USER;
const ERRO_INVALID_LOGIN_USER = { status: 403, message: "O login não pôde ser concluído. Sua conta está temporariamente desativada ou cancelada." };
exports.ERRO_INVALID_LOGIN_USER = ERRO_INVALID_LOGIN_USER;
const ERRO_INVALID_TYPE_USER = { status: 400, message: "Atenção, informe o tipo de usuario e tente novamente." };
exports.ERRO_INVALID_TYPE_USER = ERRO_INVALID_TYPE_USER;
const ERRO_INTERNAL_SERVER = { status: 500, message: 'Erro interno no servidor, tente novamente mais tarde.' };
exports.ERRO_INTERNAL_SERVER = ERRO_INTERNAL_SERVER;
const ERRO_NAME_PHOTO_PASSWORD = { status: 500, message: "Atenção o nome, senha e foto são campos obrigatorios. OBS: A senha deve ter no mínimo 6 caracteres .Verifique e tente novamente." };
exports.ERRO_NAME_PHOTO_PASSWORD = ERRO_NAME_PHOTO_PASSWORD;
const ERRO_REQUIRED_DATA_CLIENTE = { status: 422, message: 'Atenção, verifique a documentação para enviar a requisição com o formato e tipos corretos.' };
exports.ERRO_REQUIRED_DATA_CLIENTE = ERRO_REQUIRED_DATA_CLIENTE;
const ERRO_REQUIRED_DATA_DIARISTA = { status: 422, message: 'Atenção, verifique a documentação para enviar a requisição com o formato e tipos corretos.' };
exports.ERRO_REQUIRED_DATA_DIARISTA = ERRO_REQUIRED_DATA_DIARISTA;
const ERRO_REQUIRED_DATA_HOUSE_CLIENTE = { status: 422, message: 'Atenção, preencha os dados referentes a casa e tente novamnete. No mínimo 1 comodo.' };
exports.ERRO_REQUIRED_DATA_HOUSE_CLIENTE = ERRO_REQUIRED_DATA_HOUSE_CLIENTE;
const ERRO_REGISTER_USER = { status: 422, message: "A inserção falhou verifique os dados e tente novamente." };
exports.ERRO_REGISTER_USER = ERRO_REGISTER_USER;
const ERRO_REGISTER_EMAIL = { status: 422, message: "Atenção email no formato inválido. Ele deve ter esse formato: exemplo@gmail.com" };
exports.ERRO_REGISTER_EMAIL = ERRO_REGISTER_EMAIL;
const ERRO_REQUIRE_CPF = { status: 422, message: "Atenção o cpf informado está incorreto." };
exports.ERRO_REQUIRE_CPF = ERRO_REQUIRE_CPF;
const ERRO_REQUIRE_BIRTH_DATE = { status: 422, message: "Atenção a data informada está no formato incorreto. Envie nesse formato: YYYY-MM-DD" };
exports.ERRO_REQUIRE_BIRTH_DATE = ERRO_REQUIRE_BIRTH_DATE;
const ERRO_NUMBER_PHONE = { status: 422, message: "Atenção o número de telefone esta errado. verique e tente novamente. exemplo: (11) 1111-11111" };
exports.ERRO_NUMBER_PHONE = ERRO_NUMBER_PHONE;
const ERRO_ADDRESS = { status: 422, message: "Atenção, verifique os dados referentes ao endereço e tente novamente" };
exports.ERRO_ADDRESS = ERRO_ADDRESS;
const ERRO_DELETE_USER = { status: 500, message: "Erro ao tentar deletar os dados do usuario, verifique e tente novamente." };
exports.ERRO_DELETE_USER = ERRO_DELETE_USER;
const ERRO_UPDATE_USER = { status: 500, message: "Erro ao tentar atualizar dados, verifique a documentação e tente novamente." };
exports.ERRO_UPDATE_USER = ERRO_UPDATE_USER;
const ERRO_UPDATE_PHONE_USER = { status: 500, message: "Erro ao tentar atualizar os dados referentes ao número de telefone." };
exports.ERRO_UPDATE_PHONE_USER = ERRO_UPDATE_PHONE_USER;
const ERRO_UPDATE_DATA_SIMPLE_DIARIST = { status: 500, message: "Erro, Não foi possivel atualizar os dados referentes a Nome, Biografia, Genero, Senha, Foto ou Preço." };
exports.ERRO_UPDATE_DATA_SIMPLE_DIARIST = ERRO_UPDATE_DATA_SIMPLE_DIARIST;
const ERRO_UPDATE_ADDRESS_CLIENT = { status: 500, message: "Erro, Não foi possivel atualizar o endereço" };
exports.ERRO_UPDATE_ADDRESS_CLIENT = ERRO_UPDATE_ADDRESS_CLIENT;
const ERRO_REQUIRED_TOKEN = { status: 401, message: "Token não fornecido." };
exports.ERRO_REQUIRED_TOKEN = ERRO_REQUIRED_TOKEN;
const ERRO_INVALID_TOKEN = { status: 401, message: "Token inválido." };
exports.ERRO_INVALID_TOKEN = ERRO_INVALID_TOKEN;
const CREATED_REGISTER = { status: 201, message: "Registro criado com sucesso." };
exports.CREATED_REGISTER = CREATED_REGISTER;
const UPDATE_USER = { status: 201, message: "Registro atualizado com sucesso" };
exports.UPDATE_USER = UPDATE_USER;
const DELETE_USER = { status: 200, message: "Registro deletado com sucesso." };
exports.DELETE_USER = DELETE_USER;
